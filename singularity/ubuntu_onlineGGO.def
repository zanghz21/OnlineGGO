Bootstrap: docker

From: python:3.9.11-buster

%files
    CMAES/setup.py /usr/project/CMAES/setup.py
    CMAES/CMakeLists.txt /usr/project/CMAES/CMakeLists.txt
    CMAES/WPPL /usr/project/CMAES/WPPL
    boost_1_71_0.tar.gz /usr/project/boost_1_71_0.tar.gz
    CMAES/requirements.txt /usr/project/CMAES/requirements.txt
    CMAES/learn2follow/docker/requirements.txt /usr/project/CMAES/learn2follow/docker/requirements.txt
    Guided-PIBT/guided-pibt /usr/project/Guided-PIBT/guided-pibt
    Guided-PIBT/compile.sh /usr/project/Guided-PIBT/compile.sh
    test_torch/libtorch /usr/project/test_torch/libtorch
    third_party/MiniDNN /usr/project/third_party/MiniDNN
    third_party/eigen /usr/project/third_party/eigen
    CMAES/dask_config.yml /etc/dask/dask_config.yml
    CMAES/RHCR /usr/project/CMAES/RHCR
    CMAES/pybind11 /usr/project/CMAES/pybind11
    

%runscript
    echo "This is what happens when you run the container..."

%post
    echo "Hello from inside the container"

    apt-get update
    apt-get install -y \
        wget \
        git \
        zip \
        unzip \
        sudo \
        cmake \
        tar \
        libgl1-mesa-dev \
        libgl1-mesa-glx \
        mesa-utils \
        libglew-dev \
        libosmesa6-dev \
        patchelf \
        ffmpeg \
        whiptail \
        build-essential \
        libomp-dev \
        libeigen3-dev \
        libspdlog-dev \
        dvipng \
        texlive-latex-extra \
        texlive-fonts-recommended \
        cm-super \
        python3-dev
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    # Microsoft fonts (particularly Times)
    # https://stackoverflow.com/questions/60934639/install-fonts-in-linux-container-for-asp-net-core#62888227
    # sed -i'.bak' 's/$/ contrib/' /etc/apt/sources.list
    apt-get update
    apt-get install -y fontconfig fonts-liberation
    fc-cache -f -v

    # Project
    PROJECT_ROOT=/usr/project
    mkdir -p $PROJECT_ROOT

    # Python
    cd $PROJECT_ROOT
    pip install -r CMAES/requirements.txt
    pip install -r CMAES/learn2follow/docker/requirements.txt

    # Boost
    tar -zxvf boost_1_71_0.tar.gz > unzip_boost.out
    cd boost_1_71_0
    # get the no of cpucores to make faster
    cpuCores=`cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}'`
    echo "Available CPU cores: "$cpuCores
    ./bootstrap.sh  # this will generate ./b2 > booststrap_boost.out
    echo "Installing Boost from source..."
    sudo ./b2 --with=all -j $cpuCores install > install_boost.out
    export LD_LIBRARY_PATH=${PROJECT_ROOT}/CMAES/boost_1_71_0:$LD_LIBRARY_PATH


%environment
    export PROJECT_ROOT=/usr/project

    # Set X11 display for GUI output
    export DISPLAY=":1"

    # Set numpy to be single-threaded
    export OPENBLAS_NUM_THREADS=1

    # Detect package
    export PYTHONPATH=$PROJECT_ROOT/CMAES:$PYTHONPATH
    export PYTHONPATH=$PROJECT_ROOT/Guided-PIBT/guided-pibt/pybind11:$PYTHONPATH

    # Trim memory aggressively
    # https://github.com/dask/distributed/issues/5279
    export MALLOC_TRIM_THRESHOLD_=0

%runscript
    which python
    python --version
    python3 --version


    cd $PROJECT_ROOT/CMAES
    mkdir simulators
    cd simulators
    mkdir trafficMAPF trafficMAPF_lns trafficMAPF_off trafficMAPF_off_lns trafficMAPF_on trafficMAPF_on_lns wppl rhcr

    cpuCores=`cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}'`
    echo "Available CPU cores: "$cpuCores

    cd $PROJECT_ROOT/CMAES/WPPL
    cmake . -DPYTHON_EXECUTABLE=$(which python3) -DEIGEN3_INCLUDE_DIR=${PROJECT_ROOT}/third_party/eigen \
    -DMINIDNN_DIR=${PROJECT_ROOT}/third_party/MiniDNN/include
    echo "Compiling competition simulator..."
    make -j $cpuCores
    ls *.so
    mv py_driver.cpython-39-x86_64-linux-gnu.so ../simulators/wppl
    mv py_sim.cpython-39-x86_64-linux-gnu.so ../simulators/wppl
    mv lifelong_comp ../simulators/wppl
    
    cd $PROJECT_ROOT/Guided-PIBT
    cmake -B guided-pibt-build ./guided-pibt -DSWAP=ON \
        -DGUIDANCE=ON -DGUIDANCE_LNS=OFF -DFLOW_GUIDANCE=OFF -DINIT_PP=ON -DRELAX=100 \
        -DOBJECTIVE=4 -DFOCAL_SEARCH=OFF -DCMAKE_BUILD_TYPE=RELEASE \
        -DCMAKE_PREFIX_PATH=${PROJECT_ROOT}/test_torch/libtorch \
        -DEIGEN3_INCLUDE_DIR=${PROJECT_ROOT}/third_party/eigen \
        -DMINIDNN_DIR=${PROJECT_ROOT}/third_party/MiniDNN/include \
        -DPYTHON_EXECUTABLE=$(which python3)
    make -C guided-pibt-build -j $cpuCores
    cd guided-pibt-build
    cp py_driver.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF

    cd $PROJECT_ROOT/Guided-PIBT
    cmake -B guided-pibt-build ./guided-pibt -DSWAP=ON \
        -DGUIDANCE=ON -DGUIDANCE_LNS=OFF -DFLOW_GUIDANCE=OFF -DINIT_PP=ON -DRELAX=100 \
        -DOBJECTIVE=5 -DFOCAL_SEARCH=OFF -DCMAKE_BUILD_TYPE=RELEASE \
        -DCMAKE_PREFIX_PATH=${PROJECT_ROOT}/test_torch/libtorch \
        -DEIGEN3_INCLUDE_DIR=${PROJECT_ROOT}/third_party/eigen \
        -DMINIDNN_DIR=${PROJECT_ROOT}/third_party/MiniDNN/include \
        -DPYTHON_EXECUTABLE=$(which python3)
    make -C guided-pibt-build -j $cpuCores
    cd guided-pibt-build
    cp py_driver.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF_off
    cp period_on_sim.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF_on

    cd $PROJECT_ROOT/Guided-PIBT
    cmake -B guided-pibt-build ./guided-pibt -DSWAP=ON \
        -DGUIDANCE=ON -DGUIDANCE_LNS=10 -DFLOW_GUIDANCE=OFF -DINIT_PP=ON -DRELAX=100 \
        -DOBJECTIVE=5 -DFOCAL_SEARCH=OFF -DCMAKE_BUILD_TYPE=RELEASE \
        -DCMAKE_PREFIX_PATH=${PROJECT_ROOT}/test_torch/libtorch \
        -DEIGEN3_INCLUDE_DIR=${PROJECT_ROOT}/third_party/eigen \
        -DMINIDNN_DIR=${PROJECT_ROOT}/third_party/MiniDNN/include \
        -DPYTHON_EXECUTABLE=$(which python3)
    make -C guided-pibt-build -j $cpuCores
    cd guided-pibt-build
    cp py_driver.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF_off_lns
    cp period_on_sim.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF_on_lns

    cd $PROJECT_ROOT/Guided-PIBT
    cmake -B guided-pibt-build ./guided-pibt -DSWAP=ON \
        -DGUIDANCE=ON -DGUIDANCE_LNS=10 -DFLOW_GUIDANCE=OFF -DINIT_PP=ON -DRELAX=100 \
        -DOBJECTIVE=4 -DFOCAL_SEARCH=OFF -DCMAKE_BUILD_TYPE=RELEASE \
        -DCMAKE_PREFIX_PATH=${PROJECT_ROOT}/test_torch/libtorch \
        -DEIGEN3_INCLUDE_DIR=${PROJECT_ROOT}/third_party/eigen \
        -DMINIDNN_DIR=${PROJECT_ROOT}/third_party/MiniDNN/include \
        -DPYTHON_EXECUTABLE=$(which python3)
    make -C guided-pibt-build -j $cpuCores
    cd guided-pibt-build
    cp py_driver.cpython-39-x86_64-linux-gnu.so ../../CMAES/simulators/trafficMAPF_lns

    cd $PROJECT_ROOT/CMAES
    cmake . -DPYTHON_EXECUTABLE=$(which python3)
    echo "Compiling warehouse simulator..."
    make -j
    cp warehouse_sim.cpython-39-x86_64-linux-gnu.so simulators/rhcr/
    cp WarehouseSimulator.cpython-39-x86_64-linux-gnu.so simulators/rhcr/
